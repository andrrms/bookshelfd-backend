// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/database/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  uuid String @unique @default(uuid())
  username String @unique
  email String @unique
  password String
  reputation Int @default(0)

  contributedBooks Book[]
  validationsGiven BookValidation[]

  refreshTokens RefreshToken[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model RefreshToken{ 
  id Int @id @default(autoincrement())
  token String @unique
  userId Int
  user User @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

enum BookStatus {
  DRAFT
  PENDING_VALIDATION
  VALIDATED
  REJECTED
  ARCHIVED
}

model Book {
  id String @id @default(uuid())
  title String
  author String
  isbn String? @unique
  description String?
  status BookStatus @default(DRAFT)

  contributorUuid String
  contributor User @relation(fields: [contributorUuid], references: [uuid])
  validations BookValidation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model BookValidation {
  bookId String
  validatorUuid String
  isValid Boolean
  reason String?

  book Book @relation(fields: [bookId], references: [id])
  validator User @relation(fields: [validatorUuid], references: [uuid])

  createdAt DateTime @default(now())
  deletedAt DateTime?

  @@id([bookId, validatorUuid])
}
